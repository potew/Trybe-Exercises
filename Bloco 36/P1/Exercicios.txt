// Vamos exercitar nossa capacidade de abstra√ß√£o em diferentes cen√°rios. Em cada exerc√≠cio reflita sobre a modelagem, as caracter√≠sticas, o comportamento e rela√ß√µes entre as classes.

Exerc√≠cio 1: Em um contexto de orienta√ß√£o a objetos, como podemos definir o que s√£o mensagens e qual a sua import√¢ncia?
// As mensagens representam a comunica√ß√£o entre os objetos por meio das suas respectivas responsabilidades. Exemplo: Objeto.m√©Todo(pa,r√¢,me,tros). Elas podem ou n√£o alterar o estado de um objeto.

Exerc√≠cio 2: Ap√≥s definir mensagens, como podemos definir interface e qual a rela√ß√£o entre os conceitos?
// As formas de se interagir com os objetos por meio de atributos ou par√¢metros, a depender do objeto em quest√£o.

Exerc√≠cio 3: Para exercitar nossa capacidade de abstra√ß√£o, vamos modelar algumas partes de um software de geometria. Como poder√≠amos modelar um objeto ret√¢ngulo?
üê¶ Baseado no exemplo do quadrado, vamos utilizar a seguinte nota√ß√£o para descrever nossas abstra√ß√µes:

Nome da abstra√ß√£o
Ret√¢ngulo

Atributos/estados
- Base
- Altura

Comportamentos
- Calcular area (base * altura)
- Calcular per√≠metro (2*base + 2*altura)

Exerc√≠cio 4: E como poder√≠amos definir um c√≠rculo?
// Com o raio e o pi para ajudar nos comportamentos

Exerc√≠cio 5: Notaram que todas estas classes tem caracter√≠sticas em comum? Que tal abstrairmos utilizando a heran√ßa em uma classe que represente figuras geom√©tricas em geral? Utilize a mesma nota√ß√£o anterior.
Nome da abstra√ß√£o
Generic - geofig - abstrata

Atributos/estados
- Pi e Raio

Comportamentos
- calcular area (medida 1 * medida 2)
- calcular per√≠metro (2*m1 + 2*m2)

Rela√ß√µes
- c√≠rculo √© uma especializa√ß√£o de uma fig. geom√©trica

üê¶ Reflita e considere caracter√≠sticas abstratas. Adicione tamb√©m um espa√ßo para demonstrar as rela√ß√µes existentes como o exemplo abaixo:
rela√ß√µes:
- C√≠rculo √© uma especializa√ß√£o de uma figura geom√©trica

Exerc√≠cio 6: Vamos mudar um pouco nosso contexto para um sistema de vendas de uma cafeteria. Como podemos abstrair um pedido? Quais as suas caracter√≠sticas e comportamentos?
// Atributos/estados: Um pedido tem data/hora, nome do cliente, nome do atendente, itens consumidos do card√°pio, valor total
// Comportamentos: criar pedido, adicionar item ao pedido, fechar pedido

Exerc√≠cio 7: Considerando que uma das caracter√≠sticas de um pedido pode ser a sua forma de pagamento (cart√£o alimenta√ß√£o, cart√£o d√©bito/cr√©dito, dinheiro), como poder√≠amos definir cada uma das formas de pagamento? E se todas as formas de pagamento tivessem como requisito a autoriza√ß√£o antes do pagamento?
üê¶ Um detalhe aqui √© que como todos tipos de pagamentos possuem o comportamento de autoriza√ß√£o, que podem variar pedido a pedido.
Nome da abstra√ß√£o
Forma de pagamento(generic) --> Dinheiro || Cart√£o de cr√©D√©bito || VR (s√£o formas de pgto)
Atributos/estados: Valor --> ? | ? | ?
Comportamentos: Autorizar (sempre true no caso de cash)


Exerc√≠cio 8: Imagine um sistema de mensageria em uma empresa de delivery, que notifica uma base de clientes sobre suas promo√ß√µes. Estas notifica√ß√µes devem ser feitas por email, sms ou push notification e voc√™ √© o respons√°vel por modelar este servi√ßo. Defina utilizando a mesma nota√ß√£o dos exerc√≠cios anteriores.
// Nome da abstra√ß√£o: mensagem_promocional --> Mailer || SMS || Push

Atributos/estados
// Assunto, per√≠odo e meio de divulga√ß√£o, segmenta√ß√£o de clientes, mensagem

Comportamentos/M√©todos
// Criar nova promo√ß√£o, incluir/excluir clientes, selecionar meio, disparar envio

Exerc√≠cio 9: Notou que os pilares da orienta√ß√£o a objetos come√ßam a manifestar a medida que fizemos nossos exerc√≠cios de modelagem? Que tal agora ent√£o modelarmos uma televis√£o? Ser√° que mais pilares aparecer√£o?
üê¶ Pense em como encapsular comportamentos como o estado (ligado/desligado), ou a taxa de varia√ß√£o do volume, que muda de TV para TV etc.

Nome da abstra√ß√£o - TV
Atributos/estados - Volume, canal, resolu√ß√£o, configura√ß√µes, taxa de aumento de volume, tamanho, estado (on/off)
Comportamentos - Volume up, down, channel up/down/input, power toggle(on/off)